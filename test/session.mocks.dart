// Mocks generated by Mockito 5.4.4 from annotations
// in mysql_connector/test/session.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:mysql_connector/src/session.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NegotiationState].
///
/// See the documentation for Mockito's code generation for more information.
class MockNegotiationState extends _i1.Mock implements _i2.NegotiationState {
  @override
  int get protocolVersion => (super.noSuchMethod(
        Invocation.getter(#protocolVersion),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  String get serverVersion => (super.noSuchMethod(
        Invocation.getter(#serverVersion),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#serverVersion),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#serverVersion),
        ),
      ) as String);

  @override
  int get serverConnectionId => (super.noSuchMethod(
        Invocation.getter(#serverConnectionId),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get serverDefaultCharset => (super.noSuchMethod(
        Invocation.getter(#serverDefaultCharset),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get serverCapabilities => (super.noSuchMethod(
        Invocation.getter(#serverCapabilities),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get clientCapabilities => (super.noSuchMethod(
        Invocation.getter(#clientCapabilities),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get maxPacketSize => (super.noSuchMethod(
        Invocation.getter(#maxPacketSize),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool get compressionEnabled => (super.noSuchMethod(
        Invocation.getter(#compressionEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get charset => (super.noSuchMethod(
        Invocation.getter(#charset),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool hasCapabilities(int? capabilities) => (super.noSuchMethod(
        Invocation.method(
          #hasCapabilities,
          [capabilities],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}
